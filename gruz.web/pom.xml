<?xml version="1.0" encoding="UTF-8"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<modelVersion>4.0.0</modelVersion>
	
    <parent>
      <groupId>by.zloy.gruz</groupId>
	  <artifactId>gruz.parent</artifactId>
      <version>1.0.0.qualifier</version>
      <relativePath>../gruz.parent/pom.xml</relativePath>
    </parent>
  
    <artifactId>gruz.web</artifactId>
    <version>1.0.0.qualifier</version>
    <name>gruz.web</name>
    <packaging>war</packaging>
    <build>
        <finalName>gruz.web</finalName>
        <plugins>
            <plugin> <!-- Need to set source level 1.5 to use annotations like @EJB -->
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                </configuration>
            </plugin>
            <plugin> <!-- Need to use this plugin to build war files -->
                <artifactId>maven-war-plugin</artifactId>
                <groupId>org.apache.maven.plugins</groupId>
                <version>2.0</version>
                <configuration>
                    <archive>
                        <!-- add bundle plugin generated manifest to the war -->
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                        <!-- For some reason, adding Bundle-ClassPath in maven-bundle-plugin
                        confuses that plugin and it generates wrong Import-Package, etc.
                        So, we generate it here.
                        -->
                        <manifestEntries>
                            <Bundle-ClassPath>WEB-INF/classes/</Bundle-ClassPath>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.0.0</version>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                        <supportedProjectType>war</supportedProjectType>
                    </supportedProjectTypes>
                    <instructions>
                        <Bundle-Activator>by.zloy.gruz.web.impl.Activator</Bundle-Activator>
                        <Export-Package>by.zloy.gruz.web.api</Export-Package>
                        <!-- This is the context root of this application -->
                        <Web-ContextPath>/gruz</Web-ContextPath>
                        <!-- Bundle-ClassPath without "." confuses bundle plugin.
                             So, leave it unspecified (i.e., default to ".") and
                             we shall generate it using war-plugin's manifest customization
                        <Bundle-ClassPath>WEB-INF/classes/</Bundle-ClassPath>
                        -->
                    </instructions>
                </configuration>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.servlet</artifactId>
            <version>3.0-Preview</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.ejb</artifactId>
            <version>3.0-Preview</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>osgi_R4_core</artifactId>
            <version>1.0</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <repositories>
        <repository> <!-- Needed to access latest Java EE API from GlassFish project -->
            <id>glassfish-repo-archive</id>
            <name>Nexus repository collection for Glassfish</name>
            <url>http://maven.glassfish.org/content/groups/glassfish</url>
            <snapshots>
                <updatePolicy>never</updatePolicy>
            </snapshots>
        </repository>
    </repositories>
</project>
